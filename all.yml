---
- hosts: all
  tasks:
      
  - name: Add nginx repository
    apt_repository: repo='ppa:nginx/stable'

  - name: Install utility packages
    apt:
      name:
        - nginx
        - golang-go
        - php-fpm
        - curl
        - letsencrypt
        - git
      state: present
      autoclean: yes
   
  - name: ADD GOPATH
    shell: export GOPATH=/opt/src/

######## Create directory

  - name: Mkdir src
    file:
      path: /opt/{{ item }}
      state: directory
    with_items:
      - src
      - src/ssl

  - name: Mkdir www
    file:
      path: /var/www/{{ item }}
      state: directory
    with_items:
      - "{{ domain_name }}"
      - letsencrypt

######## App install

  - name: clone app repo
    git:
      repo: 'https://github.com/Mikhail-Dyuryagin/app'
      dest: /opt/src/app

  - name: build goapp
    shell: go build main.go
    args:
      chdir: /opt/src/app
    notify: restart goapp



  - name: goapp systemd
    template:
      src: conf/goapp.service 
      dest: /etc/systemd/system/goapp.service
      owner: root
      group: root 
      mode: 0644
    notify:
      - reload systemd
      - enable goapp
      - restart goapp 

########
  - name: Install index
    template:
      src: front/index.html
      dest: /var/www/{{domain_name}}/index.html
    notify: restart nginx

  - name: Install app.js 
    template:
      src: front/app.js
      dest: /var/www/{{domain_name}}/app.js
    notify: restart nginx
########
  - name: Kick default site
    file: 
      path: /etc/nginx/sites-enabled/default
      state: absent 


  - name: Location 80
    template:
      src: conf/nginx80.j2
      dest: /etc/nginx/sites-enabled/nginx80.j2
      notify: restart nginx

  - name: Location all
    template:
      src: conf/nginxall.j2
      dest: /etc/nginx/sites-enabled/nginxall.j2
    notify: restart nginx


 #  - name: Create site config 
  #   template: src=conf/nginxall.j2 dest=/etc/nginx/sites-enabled/nginxall.j2 owner=root group=root mode=0644
   #  notify: restart nginx
    
  - name: Create cert letsencrypt
    shell: letsencrypt certonly -n --webroot -w /var/www/letsencrypt/  -m {{ letsencrypt_email}} --agree-tos -d {{domain_name}}
    args:
      creates: /etc/letsencrypt/live/{{ domain_name }}
    notify: restart nginx  

  - name: Cronjob  for letsencrypt
    cron:
      name: letsencrypt_renew
      special_time: weekly      
      job: letsencrypt --renew certonly -n --webroot -w /opt/src/ssl -m {{ letsencrypt_email  }} --agree-tos -d {{domain_name}}
    notify: restart nginx

  handlers:
  - name: reload systemd
    systemd: daemon_reload=yes

  - name: enable goapp
    systemd: name=goapp enabled=yes

  - name: restart goapp
    systemd: name=goapp state=restarted

  - name: restart nginx
    systemd: name=nginx state=restarted

  - name: restart php 
    systemd: name=php7.0-fpm state=restarted
